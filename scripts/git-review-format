#!/usr/bin/env ruby
#!bin/sh

require "open3"

review_hash=ARGV[0]
value = 1;
show = `git show #{review_hash}`
rev = show.split(/\n/)
check = rev[0]


if value == 1 and check =~ /^From/
              
         $value = 0;
        format_linux = show
         subject = rev[4]
        subject = subject.split(/Subject:/)
        subject[1].tr!("/", "-")
        
        path = `pwd`
         path = path.strip
        File.open("#{path}/[REVIEW]#{subject}.patch", 'w') { |file| file.write(format_linux) }
         
           

             
else 
        checkcontents = `git log --numstat review | grep /#{review_hash}`
  	checkcontents= checkcontents.split(/\//)[0]
        checkcontents= checkcontents.split(/\t/)[2]
        commithash=checkcontents.strip
        stdin, stdout, stderr = Open3.popen3("git log -1 review  --pretty=fuller -- #{commithash}/#{review_hash}")
        reviewer_details = stdout.read()
        error = stderr.read() 
        reviewer_details = reviewer_details.split(/\n/)
        reviewer = reviewer_details[3]
         reviewer = reviewer.split("Commit:\s")[1]
         reviewer = reviewer.strip
         review_date = reviewer_details[4]
        review_date = review_date.split("CommitDate:\s")[1]
        review_date = review_date.strip
        subject=reviewer_details[6].strip
        format = "From: " + reviewer +"\n"
	format= format + "Subject: " + "[PATCH] #{subject}" + "\n"
	format= format + "Date: " + review_date + "\n\n---\n"
	body = show.split(/commit\s\w{40}/)
	format = format + show + "\n--\n"
	path = `pwd`
	path = path.strip
	version = `git version`
	version= version.split(/git version/)
	format = format + version[1]
      
  File.open("#{path}/[REVIEW]#{subject}.patch", 'w') { |file| file.write(format) }
       
        
  
	
end


