>commit 54b145f0a513c98f734649aa80f8886912a06187
>Author: Murtuza Mukadam <murtuza16289@gmail.com>
>Date:   Wed Aug 21 11:10:10 2013 -0400
>
>    git review --init command added inorder to initialize the tool, instructions in readme changed accordingly
>
>diff --git a/README b/README
lkjdsalkjfasldkjflaskjdflkj
>index 26c4d10..36eb398 100644
>--- a/README
>+++ b/README
>@@ -3,15 +3,16 @@ To have git-review installed on your machine:
> 1) Clone the repository https://github.com/mmukadam/git-review
> 2) Run sudo bash install
> 3) Clone the repository you wish to review
>-4) Start reviewing
>-5) Use git-review --pull inorder to pull all the reviews made in a repository
>-6) Use git-review --push to push the reviews onto the repository 
>+4) Run git-review --init inorder to initialize the tool to be able to review
>+5) Start reviewing
>+6) Use git-review --pull inorder to pull all the reviews made in a repository
>+7) Use git-review --push to push the reviews onto the repository 
> 
> *git-review runs a bunch of perl and ruby scripts. The following libraries are made use of in the scripts.
>  Please ensure you have these installed on the target machines.
> 
> **tk toolkit for ruby:  $ sudo apt-get install libtcltk-ruby 
> **trollop command line option parser for ruby: gem install trollop
>-
>+**Open3 to grant access to stdin, stdout, stderr 
> 
> *git-review uses a standard text editor gvim : sudo apt-get install vim-gnome
>diff --git a/scripts/git-review b/scripts/git-review
>index a40f695..185db8a 100755
>--- a/scripts/git-review
>+++ b/scripts/git-review
>@@ -70,7 +70,7 @@ Creates a review object on a commit
> 
> 
> EOS
>-
>+  opt :init, "Initialize the repository to start reviewing" 
>   opt :amend, "Change the last review committed"
>   opt :log, "Display log history for all reviews done" 
>   opt :respond, "Respond to a review"
>@@ -83,8 +83,23 @@ EOS
>   opt :display, "Displays the review properly"
>   opt :rm, "Deletes the review"
> end
>+          if opts[:init] ==true
>+               
>+            stdin, stdout, stderr = Open3.popen3("git branch --track review origin/review")
>+  	
>+  	    check_remote_branch = stdout.read()
>+  	    error = stderr.read().strip
>+            
>+	    error1= "fatal: A branch named 'review' already exists."
>+            error2= "fatal: Not a valid object name: 'origin/review'."
>+                    
>+
> 
>-          if opts[:push] ==true  
>+            if error == error1.strip || error ==error2.strip 
>+               end
>+            puts "git-review ready to use"
>+               exit
>+          elsif opts[:push] ==true  
> 
>                 `git push origin review:review`
>                  exit
