fs>commit 68506eaac73e232507d5780d27228dde700d7173
>Author: Murtuza Mukadam <murtuza16289@gmail.com>
>Date:   Thu Dec 12 00:25:21 2013 -0500
>
>    new commands, rm-before and rm-after
>
>diff --git a/doc/git-review.1 b/doc/git-review.1
>index 904f972..582ee7b 100644
>--- a/doc/git-review.1
>+++ b/doc/git-review.1
>@@ -124,6 +124,18 @@ Displays the interleaved history in a window.
> Deletes the review.
> .
> .P
>+\fB--rm-before\fR \fIdate\fR
>+.
>+.P
>+Deletes all reviews before the given date.
>+.
>+.P
>+\fB--rm-after\fR \fIdate\fR
>+.
>+.P
>+Deletes all reviews after the given date.
>+.
>+.P
> .
> .P
> .SH "EXAMPLES"
>diff --git a/scripts/git-review b/scripts/git-review
>index bbc66b3..bf89ce2 100755
>--- a/scripts/git-review
>+++ b/scripts/git-review
>@@ -122,7 +122,8 @@ EOS
>   opt :rm, "Deletes the review"
>   opt :list, "View list of reviews for a particular commit"
>   opt :filter_reviewer, "Deletes all reviews except the reviewer specified"
>-  opt :delete_before, "Deletes all reviews before the date given"
>+  opt :rm_before, "Deletes all reviews before the date given"
>+  opt :rm_after, "Deletes all reviews after the date given"
> end
>           if opts[:init] ==true
>                
>@@ -573,7 +574,7 @@ end
>                 exit
>                 
> 
>-             elsif opts[:delete_before]
>+             elsif opts[:rm_before]
> 
> 		stdin, stdout, stderr = Open3.popen3("git show-branch review")
>                    
>@@ -585,7 +586,7 @@ end
>                 end
>                 
> 		if ARGV.length ==0
>-                   puts " --delete-before needs a reviewer name. Check git review --help"
>+                   puts " --rm-before needs a date. Check git review --help"
>                    exit               
> 		end 
>                 date = ARGV[0]
>@@ -611,6 +612,46 @@ end
>                     
>                 exit
> 
>+             elsif opts[:rm_after]
>+
>+		stdin, stdout, stderr = Open3.popen3("git show-branch review")
>+                   
>+                   error = stderr.read()
>+                   if error.length!=0  
>+                   puts "fatal: Not a valid object name review"
>+
>+                    exit
>+                end
>+                
>+		if ARGV.length ==0
>+                   puts " --rm-after needs a date. Check git review --help"
>+                   exit               
>+		end 
>+                date = ARGV[0]
>+		check_list = `git ls-tree review -r`
>+                check_list =  check_list.split(/\n/)
>+                l = check_list.length
>+                list=""
>+                check_list.each do |commitid|
>+                           commitid=commitid.split(/\t/)
>+                           commitid=commitid[1].split("/")
>+                           commit = commitid[0]
>+                           reviewid = commitid[1]
>+                           list_review = `git log --numstat review --pretty=fuller --after=#{date} |grep -B 5 /#{reviewid}`
>+                           
>+                           if list_review.length==0
>+                              next
>+                           end
>+                           
>+                           reviewdel =  `git review --rm "#{reviewid}" `
>+                           puts reviewdel  
>+                             
>+                           end
>+                    
>+                exit
>+
>+
>+
>              elsif opts[:show_raw]==true
>                 stdin, stdout, stderr = Open3.popen3("git show-branch review")
>                    
