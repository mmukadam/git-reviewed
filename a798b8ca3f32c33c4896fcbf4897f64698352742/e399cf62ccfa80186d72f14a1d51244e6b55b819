>commit a798b8ca3f32c33c4896fcbf4897f64698352742
>Author: Murtuza Mukadam <murtuza16289@gmail.com>
>Date:   Sat Nov 16 17:07:39 2013 -0500
>
>    bug fixes, showing better error messages
>
>diff --git a/install b/install
>index 4d53d46..f244fbc 100644
>--- a/install
>+++ b/install
>@@ -1,44 +1,44 @@
> #!/bin/bash
> 
> cp scripts/git-review /usr/local/bin/git-review
>-chown root:root /usr/local/bin/git-review
>+chown root /usr/local/bin/git-review
> 
> 
> cp scripts/git-review-format /usr/local/bin/git-review-format
>-chown root:root /usr/local/bin/git-review-format
>+chown root /usr/local/bin/git-review-format
> 
> 
> cp scripts/git-review-log /usr/local/bin/git-review-log
>-chown root:root /usr/local/bin/git-review-log
>+chown root /usr/local/bin/git-review-log
> 
> cp scripts/git-review-log-limit /usr/local/bin/git-review-log-limit
>-chown root:root /usr/local/bin/git-review-log-limit
>+chown root /usr/local/bin/git-review-log-limit
> 
> cp scripts/git-review-log-show /usr/local/bin/git-review-log-show
>-chown root:root /usr/local/bin/git-review-log-show
>+chown root /usr/local/bin/git-review-log-show
> 
> cp scripts/git-review-log-reviewer /usr/local/bin/git-review-log-reviewer
>-chown root:root /usr/local/bin/git-review-log-reviewer
>+chown root /usr/local/bin/git-review-log-reviewer
> 
> cp scripts/git-reviewmbox /usr/local/bin/git-reviewmbox
>-chown root:root /usr/local/bin/git-reviewmbox
>+chown root /usr/local/bin/git-reviewmbox
> 
> cp scripts/git-display /usr/local/bin/git-display
>-chown root:root /usr/local/bin/git-display
>+chown root /usr/local/bin/git-display
> 
> cp scripts/git-displaygui /usr/local/bin/git-displaygui
>-chown root:root /usr/local/bin/git-displaygui
>+chown root /usr/local/bin/git-displaygui
> 
> cp scripts/patch-commit-linker/parsePatches.pl /usr/local/bin/parsePatches.pl
>-chown root:root /usr/local/bin/parsePatches.pl
>+chown root /usr/local/bin/parsePatches.pl
> 
> cp scripts/patch-commit-linker/searchMatch.pl /tmp/searchMatch.pl
> 
> cp scripts/msg_to_commit.pl /usr/local/bin/msg_to_commit.pl
>-chown root:root /usr/local/bin/msg_to_commit.pl
>+chown root /usr/local/bin/msg_to_commit.pl
> 
> cp scripts/git-update-review /usr/local/bin/git-update-review
>-chown root:root /usr/local/bin/git-update-review
>+chown root /usr/local/bin/git-update-review
> 
> mkdir -p /usr/local/share/man/man1
> gzip -c doc/git-review.1 > /usr/local/share/man/man1/git-review.1.gz
>diff --git a/scripts/git-review b/scripts/git-review
>index b83299b..4cb473d 100755
>--- a/scripts/git-review
>+++ b/scripts/git-review
>@@ -7,9 +7,9 @@ include Open3
> 
> def make_review(value)
> 	
>-	File.open('/tmp/review.tmp', 'w') { |file| file.write(value) }
>-	%x{xdg-open #{'/tmp/review.tmp'}}
>-	create_review = "git hash-object -w /tmp/review.tmp"
>+	File.open('/tmp/review.txt', 'w') { |file| file.write(value) }
>+	%x{gvim #{'/tmp/review.txt'}}
>+	create_review = "git hash-object -w /tmp/review.txt"
> 	review_hash = `#{create_review}`
> 	review_hash = review_hash.strip
> 	puts "Creating Review Object"
>@@ -152,6 +152,15 @@ end
>               
>           elsif opts[:amend] ==true               
> 		
>+
>+                 stdin, stdout, stderr = Open3.popen3("git show-branch review")
>+                   
>+                   error = stderr.read()
>+                   if error.length!=0  
>+                   puts "fatal: Not a valid object name review"
>+
>+                    exit
>+                end
> 		review_log = `git review-log`
> 		review_log = review_log.split(/\n/)[1]
> 		review_hash = review_log.split[1]                        
>@@ -188,7 +197,14 @@ end
> 		exit
> 
>            elsif opts[:log]==true
>-                
>+                 stdin, stdout, stderr = Open3.popen3("git show-branch review")
>+                   
>+                   error = stderr.read()
>+                   if error.length!=0  
>+                   puts "fatal: Not a valid object name review"
>+
>+                    exit
>+                end
>                 if ARGV.length ==0
>                     stdin, stdout, stderr = Open3.popen3("git review-log")
>        		    review_log=stdout.read() 
>@@ -223,11 +239,19 @@ end
>                 exit
> 
>              elsif opts[:log_limit]==true
>-          
>+                  stdin, stdout, stderr = Open3.popen3("git show-branch review")
>+                   
>+                   error = stderr.read()
>+                   if error.length!=0  
>+                   puts "fatal: Not a valid object name review"
>+
>+                    exit
>+                end
> 		 if ARGV.length ==0
> 		   puts "--log-limit requires an argument. Check git review --help"
>                    exit
>                  else 
>+                     
>                     review_log_limit =`git review-log-limit #{ARGV[0]}` 
>                     begin
>                       IO.popen("less", "w") { |f| f.puts review_log_limit}                  
>@@ -238,7 +262,14 @@ end
>                  exit
>             
>              elsif opts[:log_reviewer]==true
>-                
>+                 stdin, stdout, stderr = Open3.popen3("git show-branch review")
>+                   
>+                   error = stderr.read()
>+                   if error.length!=0  
>+                   puts "fatal: Not a valid object name review"
>+
>+                    exit
>+                end
>                 if ARGV.length ==0
>                    puts " --log-reviewer needs a reviewer name. Check git review --help"
>                    exit               
>@@ -267,7 +298,14 @@ end
> 
>    
>           elsif opts[:format]==true
>-              
>+                 stdin, stdout, stderr = Open3.popen3("git show-branch review")
>+                   
>+                   error = stderr.read()
>+                   if error.length!=0  
>+                   puts "fatal: Not a valid object name review"
>+
>+                    exit
>+                end
>                 if ARGV.length ==0
>                    puts " --format needs a review hash. Check git review --help"
>                    exit
>@@ -287,7 +325,14 @@ end
> 		
>                
>             elsif opts[:log_show]==true
>-                
>+                stdin, stdout, stderr = Open3.popen3("git show-branch review")
>+                   
>+                   error = stderr.read()
>+                   if error.length!=0  
>+                   puts "fatal: Not a valid object name review"
>+
>+                    exit
>+                end
>                  if ARGV.length ==0
> 		    review_log_show =`git review-log-show`
>                     begin
>@@ -321,7 +366,14 @@ end
>                 exit 
>            
>             elsif opts[:display]==true
>-              
>+                stdin, stdout, stderr = Open3.popen3("git show-branch review")
>+                   
>+                   error = stderr.read()
>+                   if error.length!=0  
>+                   puts "fatal: Not a valid object name review"
>+
>+                    exit
>+                end
>                 if ARGV.length ==0
>                    puts " --display needs a review hash. Check git review --help"
>                    exit
>@@ -340,7 +392,14 @@ end
>                 exit 
> 
>             elsif opts[:rm]==true
>-                                  
>+                 stdin, stdout, stderr = Open3.popen3("git show-branch review")
>+                   
>+                   error = stderr.read()
>+                   if error.length!=0  
>+                   puts "fatal: Not a valid object name review"
>+
>+                    exit
>+                end           
>                 if ARGV.length ==0
>                    puts " --display needs a review hash. Check git review --help"
>                    exit
>@@ -380,9 +439,18 @@ end
>                 exit
>   
>              elsif opts[:list]==true
>-             
>+                
>                 if ARGV.length ==0
>-                   check_list = `git ls-tree review -r`
>+                   
>+                   stdin, stdout, stderr = Open3.popen3("git show-branch review")
>+                   
>+                   error = stderr.read()
>+                   if error.length!=0  
>+                   puts "fatal: Not a valid object name review"
>+
>+                    exit
>+                end
>+                check_list = `git ls-tree review -r`
>                    check_list =  check_list.split(/\n/)
>                    l = check_list.length
>                    list="Total Number of Reviews: #{l}\n"
>@@ -402,6 +470,14 @@ end
>                    exit
>                 end
>                 commit_hash = ARGV[0]
>+                stdin, stdout, stderr = Open3.popen3("git show-branch review")
>+                   
>+                   error = stderr.read()
>+                   if error.length!=0  
>+                   puts "fatal: Not a valid object name review"
>+
>+                    exit
>+                end
>                 check= `git cat-file -t #{commit_hash}`
>                 check=check.strip
>                 if check != "commit"
>@@ -433,7 +509,14 @@ end
>              
>               
>              elsif opts[:filter_reviewer]==true
>-             
>+                stdin, stdout, stderr = Open3.popen3("git show-branch review")
>+                   
>+                   error = stderr.read()
>+                   if error.length!=0  
>+                   puts "fatal: Not a valid object name review"
>+
>+                    exit
>+                end
>                 if ARGV.length ==0
>                    puts " --filter-reviewer needs a reviewer name. Check git review --help"
>                    exit               
>@@ -482,13 +565,28 @@ end
>                 
> 
>              elsif opts[:show_raw]==true
>-            
>+                stdin, stdout, stderr = Open3.popen3("git show-branch review")
>+                   
>+                   error = stderr.read()
>+                   if error.length!=0  
>+                   puts "fatal: Not a valid object name review"
>+
>+                    exit
>+                end
>                 if ARGV.length ==0
>                    puts " --show-raw needs a review hash. Check git review --help"
>                    exit
>                 end
>                 review_raw = ARGV[0]
>-                check= `git cat-file -t #{review_raw}`
>+                stdin, stdout, stderr = Open3.popen3("git cat-file -t #{review_raw}")
>+                   
>+                   error = stderr.read()
>+                   if error.length!=0  
>+                   puts "error: unable to find #{review_raw}"
>+                   
>+                    exit
>+                 end
>+                check= stdout.read()
>                 check=check.strip
>                 if check != "blob"
>                    puts "--show-raw needs a review hash. Check git review --help"
>@@ -552,7 +650,14 @@ end
>                 exit
> 
>             elsif opts[:respond]==true
>-              
>+                 stdin, stdout, stderr = Open3.popen3("git show-branch review")
>+                   
>+                   error = stderr.read()
>+                   if error.length!=0  
>+                   puts "fatal: Not a valid object name review"
>+
>+                    exit
>+                end
> 		 if ARGV.length ==0
>                     puts " --respond needs a review hash. Check git review --help"
>                     exit
