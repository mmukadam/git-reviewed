#!/usr/bin/perl



my $review_hash=$ARGV[0];


my $show=`git show $review_hash`;



my $inside_diff = 0;
my $pos = 1;
my $comment;
my $comment1;

#for each message that has no In-Reply-to header
#Store the following tuple: Hash key = line ->  msg_id, file, date, line position 
#for each message  parse the line, run it through the above hash, and then make sure that the In-Reply-To = msg_id

open my $showHandle, '<', \$show;

while(my $line = <$showHandle>) {
       
       print $line;
         
	if($line =~ />commit\s (\w{40})/xms) {
		print "\nReview on commit $1\n";
		$inside_diff = 0;
	}
	#elsif($line =~ /^>diff\s --git\s a(.*?)\s b(.*?)$/xms) {
	#	print "\nold file = $1 -- new file = $2\n";
	#}
	elsif($line =~ /^>\@\@\s -(\d+)\s \+(\d+),(\d+)/xms) {
		$inside_diff = 1;
	#	print "\nold position $1 to $2 -- new position $3 to $4\n";
		$pos = 1;
	}

     elsif($line =~ /^>\@\@\s -(\d+),(\d+)\s \+(\d+),(\d+)(\d+)/xms) {
		$inside_diff = 1;
		#print "\nold position $1 to $2 -- new position $3 to $4\n";
		$pos = 1;
	}


        elsif($line =~ /^>\@\@\s -(\d+)(\d+),(\d+)\s \+(\d+)(\d+),(\d+)/xms) {
                 $inside_diff = 1;
		#print "\nold position $1 to $2 -- new position $3 to $4\n";
		$pos = 1;
          }

         elsif($line =~ /^>\@\@\s -(\d+)\s \+(\d+),(\d+)(\d+)/xms) {

               $inside_diff = 1;
		#print "\nold position $1 to $2 -- new position $3 to $4\n";
		$pos = 1;
             }

         elsif($line =~ /^>\@\@\s -(\d+),(\d+)\s \+(\d+),(\d+)/xms) {

               $inside_diff = 1;
		#print "\nold position $1 to $2 -- new position $3 to $4\n";
		$pos = 1;
             }

           elsif($line =~ /^>\@\@\s -(\d+)(\d+),(\d+)(\d+)\s \+(\d+)(\d+),(\d+)/xms) {

             $inside_diff = 1;
		#print "\nold position $1 to $2 -- new position $3 to $4\n";
		$pos = 1;
          }

	#found a comment
	elsif($inside_diff == 1 and $line =~ /^[^>+ >-]/) {
		$comment .= $line;
                $comment1 .=$line;
                 
	}
	elsif($inside_diff == 1) {
		if (defined $comment) {
			print "\nComment starting at line $pos:\n $comment\n";
			$comment = undef;
		}
		$pos ++;
	}
}










